var documenterSearchIndex = {"docs":
[{"location":"#MobiusSphereVisual","page":"Home","title":"MobiusSphereVisual","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Render Möbius transformations on the Riemann sphere using POV-Ray.","category":"page"},{"location":"#Quick-start","page":"Home","title":"Quick start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using MobiusSphereVisual\n\nv = [0.0, 0.0, 1.0]\ntheta = pi / 2\nt = [0.2, 0.0, 0.0]\n\nrender_mobius_animation(v, theta, t; output=\"examples/demo.mp4\", nframes=120)","category":"page"},{"location":"#Using-coefficients-from-MobiusSphere.jl","page":"Home","title":"Using coefficients from MobiusSphere.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MobiusSphere.jl returns coefficient objects that carry the axis, rotation angle and translation used by the Möbius motion. Destructure the triple into (v, theta, t) before calling the renderer so the arguments match the current method signature:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using MobiusSphereVisual\n\ncoeffs = ([0.0, 0.0, 1.0], pi / 2, [0.2, 0.0, 0.0])\n\nv, theta, t = coeffs\nrender_mobius_animation(v, theta, t; output=\"examples/from_coeffs.mp4\", nframes=120)","category":"page"},{"location":"#MobiusSphereVisual._build_gif_command-Tuple{String, String, Int64, Tuple{Int64, Int64}, String}","page":"Home","title":"MobiusSphereVisual._build_gif_command","text":"_build_gif_command(ffmpeg_path, frame_pattern, fps, resolution, output_path)\n\nConstructs the FFmpeg command for encoding a GIF animation.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual._build_mp4_command-Tuple{String, String, Int64, String, Any}","page":"Home","title":"MobiusSphereVisual._build_mp4_command","text":"_build_mp4_command(ffmpeg_path, frame_pattern, fps, output_path, quality)\n\nConstructs the FFmpeg command for encoding an MP4 video.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual._normalize_sampling_overrides-Tuple{Any}","page":"Home","title":"MobiusSphereVisual._normalize_sampling_overrides","text":"_normalize_sampling_overrides(sampling)\n\nNormalize sampling overrides into a NamedTuple. Accepts nothing, an existing NamedTuple, or a Dict whose keys are converted to symbols. Throws an ArgumentError for any other input type.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual._validate_resolution-Tuple{Tuple{Int64, Int64}}","page":"Home","title":"MobiusSphereVisual._validate_resolution","text":"_validate_resolution(resolution)\n\nEnsure that the (width, height) tuple contains positive integers, returning the tuple unchanged. Throws an ArgumentError when either dimension is zero or negative.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.copy_macros-Tuple{String}","page":"Home","title":"MobiusSphereVisual.copy_macros","text":"copy_macros(output_dir)\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.derived_temp_destination-Tuple{AbstractString}","page":"Home","title":"MobiusSphereVisual.derived_temp_destination","text":"derived_temp_destination(output_path)\n\nReturn the directory path used to store intermediate frames for a render. The directory is derived from output_path by appending a _frames suffix to the output file name and reusing the same parent directory.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.ffmpegcall","page":"Home","title":"MobiusSphereVisual.ffmpegcall","text":"ffmpegcall(output_dir::String, output_path::String=\"mobius.mp4\", fps::Int=30, resolution::Tuple{Int,Int}=(1280, 720), quality::Symbol=:high)\n\nConverts a sequence of image frames in output_dir into a video file (.mp4 or .gif) using FFmpeg.\n\nArguments\n\noutput_dir::String: Path to the directory containing the input frames.\noutput_path::String: Path for the output video file (default \"mobius.mp4\").\nfps::Int: Frames per second for the output video (default 30).\nresolution::Tuple{Int,Int}: Target resolution (width, height) for the output (default (1280, 720)).\nquality::Symbol: Quality setting for MP4 encoding (default :high). Used by quality_settings.\n\n\n\n\n\n","category":"function"},{"location":"#MobiusSphereVisual.generate_pov-Tuple{Vector{Float64}, Float64, Vector{Float64}, String, Int64, Tuple{Int64, Int64}}","page":"Home","title":"MobiusSphereVisual.generate_pov","text":"generate_pov(v, theta, t, output_dir, nframes, resolution; quality=:high, sampling=nothing)\n\nCreate the POV-Ray scene and configuration files for an animation render. Returns a tuple containing the .ini filename and the path to the generated scene. Quality presets are merged with optional sampling overrides before delegating to generate_pov_ini and generate_pov_scene.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.generate_pov_ini-Tuple{String, Int64, Tuple{Int64, Int64}}","page":"Home","title":"MobiusSphereVisual.generate_pov_ini","text":"generate_pov_ini(output_dir, nframes, resolution; pov_settings)\n\nGenerate a minimal, robust .ini file tailored to the requested sampling parameters. Pass a NamedTuple containing the POV-Ray fields (antialias, depth, sampling method, threshold, flags, radiosity, photons). A convenience method remains available that accepts quality and sampling_overrides for backwards compatibility.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.generate_pov_scene-Tuple{Vector{Float64}, Float64, Vector{Float64}, String}","page":"Home","title":"MobiusSphereVisual.generate_pov_scene","text":"generate_pov_scene(v, theta, t, output_dir; global_settings_extra=\"\")\n\nGenerate a single POV-Ray file using a template with placeholders. Relies on POV-Ray's AxisRotateTrans and built-in textures. theta should be provided in radians; it is converted to degrees for POV-Ray. global_settings_extra injects additional lines inside the template's global_settings block, enabling radiosity or photon settings when requested.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.povraycall-Tuple{Any, Any}","page":"Home","title":"MobiusSphereVisual.povraycall","text":"povraycall(output_dir, ini_file)\n\nInvoke POV-Ray to render frames described by ini_file inside output_dir. The function logs the working directory for transparency and forwards the .ini file to the povray executable using Julia's run.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.quality_settings-Tuple{Symbol}","page":"Home","title":"MobiusSphereVisual.quality_settings","text":"quality_settings(quality)\n\nReturn the rendering settings associated with quality.\n\nThe preset controls both POV-Ray sampling quality and ffmpeg encoding parameters so that a single keyword can trade fidelity for faster render times.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.render_mobius_animation-Tuple{Vector{Float64}, Float64, Vector{Float64}}","page":"Home","title":"MobiusSphereVisual.render_mobius_animation","text":"render_mobius_animation(v, theta, t; output=\"mobius.mp4\", fps=30,\n                        resolution=(1280,720), nframes=150, quality=:high)\n\nRender a Möbius sphere animation in the style of \"Möbius Transformations Revealed\". theta is specified in radians and converted to degrees for the POV-Ray scene. The quality keyword toggles coordinated POV-Ray and ffmpeg presets ranging from :draft (fastest) through :film (highest fidelity), with :high remaining the default. Set keep_temp=true to retain the rendered frame directory alongside the exported video for debugging or post-processing. When you need to fine-tune ray-tracing parameters beyond a preset, provide sampling=(antialias=\"On\", antialias_depth=4, sampling_method=2, antialias_threshold=0.05, radiosity=true, photons=true, flags=\"+A0.05 +AM2 +R3\") or similar overrides. Setting radiosity=true or photons=true injects tuned global illumination blocks into the POV-Ray scene without touching the template on disk.\n\n\n\n\n\n","category":"method"},{"location":"#MobiusSphereVisual.validate_inputs-Tuple{Vector{Float64}, Float64, Vector{Float64}}","page":"Home","title":"MobiusSphereVisual.validate_inputs","text":"validate_inputs(v, theta, t)\n\nEnsure v is a 3D unit vector; normalize if needed. Ensure t is 3D.\n\n\n\n\n\n","category":"method"},{"location":"#Quality-presets","page":"Home","title":"Quality presets","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"render_mobius_animation exposes a quality keyword argument so you can match the rendering pipeline to your iteration speed:","category":"page"},{"location":"","page":"Home","title":"Home","text":":draft disables most antialiasing for extremely fast test renders and uses a veryfast ffmpeg preset.\n:medium offers balanced sampling (antialias depth 2) and a faster encoder, making it a good choice for sharing previews.\n:high keeps the original high-quality settings (antialias depth 3, sampling method 2) together with a slower -preset medium/-crf 20 ffmpeg encode for production output.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Render time scales roughly with the antialias depth—expect :draft to finish in about a third of the time of :high, while :medium lands in between with noticeably smoother edges.","category":"page"}]
}
